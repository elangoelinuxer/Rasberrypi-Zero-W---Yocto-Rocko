checkout all the layers  to rocko

Kernel Source location:
tmp/work-shared/raspberrypi0-wifi/kernel-source

Only Kernel Recompile:
bitbake -C compile virtual/kernel
or
bitbake  -C compile  linux-raspberrypi


menuconfig:
bitabke -c menuconfig linux-raspberrypi


and do package of sdcard image again
bitbake core-image-minimal -f

cleansstate
bitbake virtual/kernel -c cleansstate

clean
bitbake virtual/kernel -c clean


deploy into image
 bitbake -c deploy linux-raspberrypi

save defconfig
bitbake -c savedefconfig virtual/kernel

->config will be saved to 
build_rpi/tmp/work/raspberrypi0_wifi-poky-linux-gnueabi/linux-raspberrypi/1_4.12.14+gitAUTOINC+6fe4193dd9-r0/linux-raspberrypi0_wifi-standard-build/defconfig


-> use the above defconfig  in kernel bb  append file using KERNEL_DEFCONFIG



use,
sudo dd bs=4M if=core-image-minimal-raspberrypi0-wifi-20200331170429.rootfs.rpi-sdimg  of=/dev/sdb conv=fsync


add i2c tool:
/meta/recipes-core/images/core-image-minimal.bb
CORE_IMAGE_EXTRA_INSTALL += "i2c-tools"

bitbake i2c-tools  //to cross check only the tool



add i2c-dev driver to get /dev/i2c-1     //I2C_CHAR_DRIVER 



Prebuild Refernce:

https://dantheiotman.com/2017/08/14/creating-a-surveillance-camera-using-a-pi-zero-w-motioneyeos/
https://github.com/ccrisan/motioneyeos/releases/tag/20200203



Document patching of kernel:

//-------------------------------------------------------

1.create patch from tmp/work-shared/raspberrypi0-wifi/kernel-source
2.git do dummy commit and
3.git format-patch -1 # Create the patch
4.create linux-raspberrypi_4.12.bbappend and add  following variables
5.FILESEXTRAPATHS_prepend := "${THISDIR}/linux-raspberrypi:"
6.SRC_URI += "file://0001-Removed-bcm2708-rpi-b-plus_dtb.patch"
7.create a folder linux-raspberrypi-4.12 and place the patch inside

or
remove dtb files from 
conf/machine/include/rpi-base.inc
KERNEL_DEVICETREE ?=



//-----------------------------------------------------



Document - upgrade kernel from 4.9 to 4.12
//----------------------------------------------------------

kernel config
enable i2c char dev to use userspace tools 
enable ov5647 driver
bitbake compile
bitbake deploy
bitbake core-image-minimal
copy modules tar to filesystem


//--------------------------------------------------------
adding own kernel config to kernel

bitbake linux-yocto -c diffconfig

cp the generated .cfg to  linux-raspberrypi-4.12  directory  and  add following in .bbappend

FILESEXTRAPATHS_prepend := "${THISDIR}/linux-raspberrypi:"
SRC_URI  += "file://config_diff.cfg"

do_configure_append() {
    cat ${WORKDIR}/*.cfg >> ${B}/.config
}


//----------------------------------------------------------

config.txt

enable all i2c params 0 and 1
pass ov5647 overlay param
dtoverlay=ov5647,param=i2c_pins_28_29
dtdebug=1  //to debug device tree loading

userspace device tree debug
vcdbg log msg

//---------------------------------------------------------

add 
conf/local.conf file.

CORE_IMAGE_EXTRA_INSTALL += " kernel-modules"

//-----------------------------------------------------



